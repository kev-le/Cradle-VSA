{"version":3,"sources":["reducers/counter.js","actions/posts.js","reducers/posts.js","reducers/user.js","actions/patients.js","reducers/patients.js","reducers/index.js","store.js","actions/counter.js","containers/home/index.js","actions/users.js","containers/patientPage/index.js","containers/signup/index.js","containers/login/index.js","containers/app/index.js","index.js"],"names":["initialState","count","isIncrementing","isDecrementing","getPosts","dispatch","type","axios","get","then","res","payload","data","posts","isFetchingPosts","msg","currentUser","getPatients","console","log","catch","err","patientsList","isFetchingPatient","combineReducers","counter","state","arguments","length","undefined","Object","objectSpread","action","isLoading","user","patients","history","History","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","connectRouter","rootReducer","increment","incrementAsync","setTimeout","decrement","decrementAsync","connect","_ref","bindActionCreators","changePage","push","props","react_default","a","createElement","className","Modal","trigger","Button","Header","Content","image","Image","wrapped","size","src","Description","content","primary","secondary","class","as","onClick","disabled","map","post","i","key","title","userPostFetch","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","resp","json","message","userLoginFetch","localStorage","setItem","token","getCurrentUser","Authorization","removeItem","loginUser","logoutUser","logoutUserAction","userObj","sexOptions","text","value","pregOptions","PatientPage","columns","field","defaultSort","render","rowData","patientName","_this","openModal","isPregnant","selectedPatient","patientId","patientSex","medicalHistory","drugHistory","villageNumber","displayModal","componentDidMount","handleSelectChange","e","setState","defineProperty","name","patientData","closeModal","handleSubmit","event","preventDefault","readings","tableData","patientJSON","patient","_this2","this","isLoggedIn","dist_default","editable","onRowAdd","newData","Promise","resolve","toConsumableArray","onRowUpdate","oldData","indexOf","onRowDelete","splice","closeIcon","onClose","open","scrolling","Divider","Form","onSubmit","Group","widths","Field","control","Input","label","placeholder","onChange","patientAge","Select","options","TextArea","Component","Signup","email","password","handleChange","target","react_router_dom","style","textDecoration","to","Login","App","react_router","exact","path","component","Home","document","querySelector","es","store","lib","app"],"mappings":"0OAKMA,EAAe,CACnBC,MAAO,EACPC,gBAAgB,EAChBC,gBAAgB,qBCDLC,EAAW,WACpB,OAAO,SAAAC,GAML,OALAA,EAAS,CACPC,KAP8B,iCAWzBC,IAAMC,IAAI,yCAAyCC,KAAK,SAAAC,GAE7DL,EAAS,CACPC,KAZgB,mBAahBK,QAASD,EAAIE,WCTjBZ,EAAe,CACjBa,MAAO,GACPC,iBAAiB,EACjBC,IAAK,ICPHf,EAAe,CACnBgB,YAAa,ICAFC,EAAc,WACvB,OAAO,SAAAZ,GACLA,EAAS,CACPC,KAN8B,iCAShCC,IAAMC,IAAI,iCAAiCC,KAAK,SAACC,GAC7CQ,QAAQC,IAAI,qBAAsBT,GAClCL,EAAS,CACLC,KAbc,qBAcdK,QAASD,EAAIE,SAElBQ,MAAM,SAAAC,GACLH,QAAQC,IAAIE,GACZhB,EAAS,CACLC,KAjBkB,4BCI1BN,EAAe,CACjBsB,aAAc,GACdC,mBAAmB,GCJRC,cAAgB,CAC7BC,QNIa,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB3B,EACtB,QAD+C2B,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChCvB,MACb,IAb+B,8BAc7B,OAAOwB,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEExB,gBAAgB,IAGpB,IAlBqB,oBAmBnB,OAAO4B,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEzB,MAAOyB,EAAMzB,MAAQ,EACrBC,gBAAiBwB,EAAMxB,iBAG3B,IAxB+B,8BAyB7B,OAAO4B,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEvB,gBAAgB,IAGpB,IA7BqB,oBA8BnB,OAAO2B,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEzB,MAAOyB,EAAMzB,MAAQ,EACrBE,gBAAiBuB,EAAMvB,iBAG3B,QACE,OAAOuB,IMhCXb,MJOa,WAAkC,IAAjCa,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB3B,EAAcgC,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQG,EAAO1B,MACb,IDfwB,qBCgBtB,OAAOwB,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEb,MAAOmB,EAAOrB,QACdsB,WAAW,IAGf,IDrBkC,+BCsBhC,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIO,WAAW,IAGjB,ID1B4B,yBC2B1B,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIO,WAAW,IAGjB,ID/BsB,mBCgCpB,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEX,IAAKiB,EAAOrB,QAAQI,MAGxB,QACE,OAAOW,IIlCXQ,KHDa,WAAkC,IAAjCR,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB3B,EAAcgC,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQG,EAAO1B,MACb,IAAK,aACH,OAAOwB,OAAAC,EAAA,EAAAD,CAAA,GAAIJ,EAAX,CAAkBV,YAAagB,EAAOrB,UACxC,IAAK,cAEL,IAAK,eACH,OAAOmB,OAAAC,EAAA,EAAAD,CAAA,GAAIJ,EAAX,CAAkBV,YAAa,KACjC,QACE,OAAOU,IGPXS,SDGa,WAAkC,IAAjCT,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB3B,EAAcgC,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQG,EAAO1B,MACb,IDbwB,qBCctB,OAAOwB,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEJ,aAAcU,EAAOrB,QACrBsB,WAAW,IAGf,IDnBkC,+BCoBhC,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIO,WAAW,IAGjB,IDxB4B,sBCyB1B,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIO,WAAW,IAGjB,QACE,OAAOP,ME7BAU,EAAUC,MAIjBC,EAAa,CAACC,IAAOC,2BAAiBJ,IAUtCK,EAAoBC,IAAOC,WAAP,GACxBC,IAAeD,WAAf,EAAmBL,IADKO,OAXR,KAgBHC,cACbC,wBAAcX,EAAdW,CAAuBC,GAlBJ,GAoBnBP,qGCvBWQ,EAAY,WACrB,OAAO,SAAA5C,GACHA,EAAS,CACLC,KARuB,gCAW3BD,EAAS,CACLC,KAXa,wBAgBZ4C,EAAiB,WAC1B,OAAO,SAAA7C,GAKH,OAJAA,EAAS,CACLC,KApBuB,gCAuBpB6C,WAAW,WACd9C,EAAS,CACLC,KAxBS,uBA0Bd,OAIE8C,EAAY,WACrB,OAAO,SAAA/C,GACHA,EAAS,CACLC,KAhCuB,gCAmC3BD,EAAS,CACLC,KAnCa,wBAwCZ+C,EAAiB,WAC1B,OAAO,SAAAhD,GAKH,OAJAA,EAAS,CACLC,KA5CuB,gCA+CpB6C,WAAW,WACd9C,EAAS,CACLC,KAhDS,uBAkDd,OCoDIgD,oBArBS,SAAAC,GAAA,IAAG9B,EAAH8B,EAAG9B,QAASZ,EAAZ0C,EAAY1C,MAAZ,MAAyB,CAC/CZ,MAAOwB,EAAQxB,MACfC,eAAgBuB,EAAQvB,eACxBC,eAAgBsB,EAAQtB,eACxBU,MAAOA,EAAMA,MACbE,IAAKF,EAAME,MAGc,SAAAV,GAAQ,OACjCmD,YACE,CACEP,YACAC,iBACAE,YACAC,iBACAI,WAAY,kBAAMC,eAAK,cACvBtD,YAEFC,IAGWiD,CAzFF,SAAAK,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,QAASL,EAAAC,EAAAC,cAACI,EAAA,EAAD,oBAChBN,EAAAC,EAAAC,cAACE,EAAA,EAAMG,OAAP,uBACEP,EAAAC,EAAAC,cAACE,EAAA,EAAMI,QAAP,CAAeC,OAAK,GAClBT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAOC,SAAO,EAACC,KAAK,SAASC,IAAI,oCACjCb,EAAAC,EAAAC,cAACE,EAAA,EAAMU,YAAP,KACEd,EAAAC,EAAAC,cAACK,EAAA,EAAD,8BACAP,EAAAC,EAAAC,cAAA,0FAIAF,EAAAC,EAAAC,cAAA,6CAINF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQS,QAAQ,UAAUC,SAAO,IACjChB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQS,QAAQ,YAAYE,WAAS,IACrCjB,EAAAC,EAAAC,cAAA,OAAKgB,MAAM,eACXlB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQY,GAAG,MAAX,gBACAnB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQY,GAAG,MAAX,iBACAnB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQY,GAAG,MAAX,gBACAnB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQY,GAAG,MAAX,iBACAnB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQY,GAAG,MAAX,gBACAnB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQY,GAAG,MAAX,gBAEAnB,EAAAC,EAAAC,cAAA,mBAAWH,EAAM1D,OAEjB2D,EAAAC,EAAAC,cAAA,iCAAyBH,EAAM5C,KAE/B6C,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,UAAQkB,QAASrB,EAAMV,WAAvB,aACAW,EAAAC,EAAAC,cAAA,UAAQkB,QAASrB,EAAMT,eAAgB+B,SAAUtB,EAAMzD,gBAAvD,oBAKF0D,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,UAAQkB,QAASrB,EAAMP,WAAvB,aACAQ,EAAAC,EAAAC,cAAA,UAAQkB,QAASrB,EAAMN,eAAgB4B,SAAUtB,EAAMxD,gBAAvD,oBAKFyD,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,UAAQkB,QAAS,kBAAMrB,EAAMF,eAA7B,+BAKFG,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,UAAQkB,QAAS,kBAAMrB,EAAMvD,aAA7B,uCAKFwD,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,UACGH,EAAM9C,MAAMqE,IAAI,SAACC,EAAMC,GACtB,OAAOxB,EAAAC,EAAAC,cAAA,MAAIuB,IAAKD,GAAID,EAAKG,kDCzEtBC,EAAgB,SAAArD,GAC3B,OAAO,SAAA7B,GACL,OAAOmF,MAAM,sCAAuC,CAClDC,OAAQ,OACRC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,oBAEVC,KAAMC,KAAKC,UAAU7D,KAEpBzB,KAAK,SAAAuF,GAAI,OAAIA,EAAKC,SAClBxF,KAAK,SAAAG,GACAA,EAAKsF,QAEPhF,QAAQC,IAAIP,GAEZP,EAAS8F,EAAejE,IAAOzB,KAAK,WAClCJ,EAASqD,eAAK,oBAObyC,EAAiB,SAAAjE,GAC5B,OAAO,SAAA7B,GACL,OAAOmF,MAAM,kCAAmC,CAC9CC,OAAQ,OACRC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,oBAEVC,KAAMC,KAAKC,UAAU7D,KAEpBzB,KAAK,SAAAuF,GAAI,OAAIA,EAAKC,SAClBxF,KAAK,SAAAG,GACAA,EAAKsF,QAEPhF,QAAQC,IAAIP,EAAKsF,UAEjBE,aAAaC,QAAQ,QAASzF,EAAK0F,OACnCjG,EAASkG,KAAkB9F,KAAK,WAC9BJ,EAASqD,eAAK,qBAOb6C,EAAiB,WAC5B,OAAO,SAAAlG,GACL,IAAMiG,EAAQF,aAAaE,MACzB,OAAO/F,IAAMC,IAAI,qCAAsC,CACrDkF,QAAW,CACTC,eAAgB,mBAChBC,OAAU,mBACVY,cAAA,UAAA3D,OAA2ByD,MAG5B7F,KAAK,SAAAC,GACAA,EAAIK,KACNG,QAAQC,IAAIT,GAEZ0F,aAAaK,WAAW,SACxBpG,EAASqD,eAAK,aAEdxC,QAAQC,IAAIT,GACZL,EAASqG,EAAUhG,EAAIE,UAExBQ,MAAM,SAACC,GAER,OADAhB,EAASqD,eAAK,WACP,CAACwC,QAAY,sBAKjBS,EAAa,WACxB,OAAO,SAAAtG,GACL+F,aAAaK,WAAW,SACxBpG,EAASuG,KACTvG,EAASqD,eAAK,aAIZkD,EAAmB,iBAAO,CAC9BtG,KAAM,gBAGFoG,EAAY,SAAAG,GAAO,MAAK,CAC5BvG,KAAM,aACNK,QAASkG,mDC9ELC,GAAa,CACjB,CAAEzB,IAAK,IAAK0B,KAAM,OAAQC,MAAO,KACjC,CAAE3B,IAAK,IAAK0B,KAAM,SAAUC,MAAO,KACnC,CAAE3B,IAAK,IAAK0B,KAAM,QAASC,MAAO,MAG9BC,GAAc,CAClB,CAAE5B,IAAK,IAAK0B,KAAM,MAAOC,OAAO,GAChC,CAAE3B,IAAK,IAAK0B,KAAM,KAAMC,OAAO,IAG3BE,8MACJxF,MAAQ,CACNyF,QAAS,CACP,CAAE7B,MAAO,aAAc8B,MAAO,YAAaC,YAAa,OACxD,CAAE/B,MAAO,eAAgB8B,MAAO,cAC9BE,OAAQ,SAAAC,GAAO,OACb3D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAIyD,EAAQC,aACZ5D,EAAAC,EAAAC,cAAA,KAAGkB,QAAS,kBAAMyC,EAAKC,UAAU,CAACH,cAAlC,gBAGN,CAAEjC,MAAO,WAAYgC,OAAQ,SAAAC,GAAO,OAAI3D,EAAAC,EAAAC,cAAA,KAAGkB,QAAS,kBAAM9D,QAAQC,IAAR,WAAA0B,OAAuB0E,MAAzC,mBACxC,CAAEjC,MAAO,mBAAoB8B,MAAO,WAClCE,OAAQ,SAAAC,GAAO,OAAIA,EAAQI,WAAc/D,EAAAC,EAAAC,cAAA,2BAA+BF,EAAAC,EAAAC,cAAA,0BAE5ElD,KAAM,GACNgH,gBAAiB,CAAEC,UAAW,GAAIL,YAAa,OAC5BM,WAAY,IAAKC,eAAgB,GACjCC,YAAa,GAAIC,cAAc,IAElDC,cAAc,KAGhBC,kBAAoB,WAClBjH,QAAQC,IAAI,qBACZsG,EAAK9D,MAAM4C,iBAAiB9F,KAAK,SAACY,QACpBQ,IAARR,GAIJoG,EAAK9D,MAAM1C,mBAIfmH,mBAAqB,SAACC,EAAGrB,GACvB9F,QAAQC,IAAI6F,GACZS,EAAKa,SAAS,CAACV,gBAAkB9F,OAAAC,EAAA,EAAAD,CAAA,GAAM2F,EAAK/F,MAAMkG,gBAAnC9F,OAAAyG,EAAA,EAAAzG,CAAA,GAAqDkF,EAAMwB,KAAQxB,EAAMA,aAG1FU,UAAY,SAACe,GACXvH,QAAQC,IAAIsH,GACZvH,QAAQC,IAAI,cACZsG,EAAKa,SAAS,CAAEJ,cAAc,EAAMN,gBAAiBa,EAAW,aAGlEC,WAAa,WACXxH,QAAQC,IAAI,eACZsG,EAAKa,SAAS,CAAEJ,cAAc,OAGhCS,aAAe,SAACC,GACdA,EAAMC,iBACN,IAAIJ,EAAchB,EAAK/F,MAAMkG,uBAGtBa,EAAYK,gBACZL,EAAYM,iBACZN,EAAYZ,UAEnB,IAAImB,EAAclD,KAAKC,UAAU,CAAEkD,QAAYR,IAC/CvH,QAAQC,IAAI6H,4EAKL,IAAAE,EAAAC,KAEP,OAAKA,KAAKxF,MAAMzB,KAAKkH,WAKjBxF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,2DACAF,EAAAC,EAAAC,cAACuF,EAAAxF,EAAD,CACEyB,MAAM,iBACN6B,QAASgC,KAAKzH,MAAMyF,QACpBvG,KAAMuI,KAAKxF,MAAM/C,KACjB0I,SAAU,CACRC,SAAU,SAAAC,GAAO,OACf,IAAIC,QAAQ,SAAAC,GACVvG,WAAW,WACTuG,IACA,IAAM9I,EAAIkB,OAAA6H,EAAA,EAAA7H,CAAOoH,EAAKxH,MAAMd,MAC5BA,EAAK8C,KAAK8F,GACVN,EAAKZ,SAALxG,OAAAC,EAAA,EAAAD,CAAA,GAAmBoH,EAAKxH,MAAxB,CAA+Bd,WAC9B,QAEPgJ,YAAa,SAACJ,EAASK,GAAV,OACX,IAAIJ,QAAQ,SAAAC,GACVvG,WAAW,WACTuG,IACA,IAAM9I,EAAIkB,OAAA6H,EAAA,EAAA7H,CAAOoH,EAAKxH,MAAMd,MAC5BA,EAAKA,EAAKkJ,QAAQD,IAAYL,EAC9BN,EAAKZ,SAALxG,OAAAC,EAAA,EAAAD,CAAA,GAAmBoH,EAAKxH,MAAxB,CAA+Bd,WAC9B,QAEPmJ,YAAa,SAAAF,GAAO,OAClB,IAAIJ,QAAQ,SAAAC,GACVvG,WAAW,WACTuG,IACA,IAAM9I,EAAIkB,OAAA6H,EAAA,EAAA7H,CAAOoH,EAAKxH,MAAMd,MAC5BA,EAAKoJ,OAAOpJ,EAAKkJ,QAAQD,GAAU,GACnCX,EAAKZ,SAALxG,OAAAC,EAAA,EAAAD,CAAA,GAAmBoH,EAAKxH,MAAxB,CAA+Bd,WAC9B,WAKXgD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOiG,WAAS,EAACC,QAASf,KAAKT,WAAYyB,KAAMhB,KAAKzH,MAAMwG,cAC1DtE,EAAAC,EAAAC,cAACE,EAAA,EAAMG,OAAP,4BACAP,EAAAC,EAAAC,cAACE,EAAA,EAAMI,QAAP,CAAegG,WAAS,GACtBxG,EAAAC,EAAAC,cAACE,EAAA,EAAMU,YAAP,KACEd,EAAAC,EAAAC,cAACK,EAAA,EAAD,oBAAqBgF,KAAKzH,MAAMkG,gBAAgBC,WAChDjE,EAAAC,EAAAC,cAACuG,EAAA,EAAD,MACAzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAMC,SAAUpB,KAAKR,cACnB/E,EAAAC,EAAAC,cAACwG,EAAA,EAAKE,MAAN,CAAYC,OAAO,SACjB7G,EAAAC,EAAAC,cAACwG,EAAA,EAAKI,MAAN,CACElC,KAAK,cACLxB,MAAOmC,KAAKzH,MAAMkG,gBAAgBJ,YAClCmD,QAASC,IACTC,MAAM,OACNC,YAAY,eACZC,SAAU5B,KAAKf,qBAEjBxE,EAAAC,EAAAC,cAACwG,EAAA,EAAKI,MAAN,CACElC,KAAK,aACLxB,MAAOmC,KAAKzH,MAAMkG,gBAAgBoD,WAClCL,QAASC,IACTC,MAAM,MACNC,YAAY,cACZC,SAAU5B,KAAKf,qBAEjBxE,EAAAC,EAAAC,cAACwG,EAAA,EAAKI,MAAN,CACElC,KAAK,aACLmC,QAASM,KACTjE,MAAOmC,KAAKzH,MAAMkG,gBAAgBE,WAClC+C,MAAM,SACNK,QAASpE,GACTgE,YAAY,SACZC,SAAU5B,KAAKf,sBAGnBxE,EAAAC,EAAAC,cAACwG,EAAA,EAAKE,MAAN,CAAYC,OAAO,SACjB7G,EAAAC,EAAAC,cAACwG,EAAA,EAAKI,MAAN,CACElC,KAAK,gBACLxB,MAAOmC,KAAKzH,MAAMkG,gBAAgBK,cAClC0C,QAASC,IACTC,MAAM,iBACNC,YAAY,iBACZC,SAAU5B,KAAKf,qBAEjBxE,EAAAC,EAAAC,cAACwG,EAAA,EAAKI,MAAN,CACElC,KAAK,aACLxB,MAAOmC,KAAKzH,MAAMkG,gBAAgBD,WAClCgD,QAASM,KACTJ,MAAM,UACNK,QAASjE,GACT8D,SAAU5B,KAAKf,sBAGnBxE,EAAAC,EAAAC,cAACwG,EAAA,EAAKI,MAAN,CACElC,KAAK,cACLxB,MAAOmC,KAAKzH,MAAMkG,gBAAgBI,aAAe,GACjD2C,QAASQ,KACTN,MAAM,eACNC,YAAY,4BACZC,SAAU5B,KAAKf,qBAEjBxE,EAAAC,EAAAC,cAACwG,EAAA,EAAKI,MAAN,CACElC,KAAK,iBACLxB,MAAOmC,KAAKzH,MAAMkG,gBAAgBG,gBAAkB,GACpD4C,QAASQ,KACTN,MAAM,kBACNC,YAAY,+BACZC,SAAU5B,KAAKf,qBAEjBxE,EAAAC,EAAAC,cAACwG,EAAA,EAAKI,MAAN,CAAYC,QAASzG,KAArB,eA9GLN,EAAAC,EAAAC,cAAA,mBApEasH,aA+MX9H,qBAhBS,SAAAC,GAAA,IAAGpB,EAAHoB,EAAGpB,SAAUD,EAAbqB,EAAarB,KAAb,MAAyB,CAC/CC,SAAWA,EACXvB,KAAOuB,EAASb,aAChBY,KAAOA,EAAKlB,cAGa,SAAAX,GAAQ,OACjCmD,YACE,CACEvC,cACAsF,iBACAnG,YAEFC,IAGWiD,CAGb4D,ICrOImE,8MACJ3J,MAAQ,CACN4J,MAAO,GACPC,SAAU,MAGZC,aAAe,SAAA5C,GACbnB,EAAKa,SAALxG,OAAAyG,EAAA,EAAAzG,CAAA,GACG8G,EAAM6C,OAAOjD,KAAOI,EAAM6C,OAAOzE,WAItC2B,aAAe,SAAAC,GACbA,EAAMC,iBACN3H,QAAQC,IAAI,cACZsG,EAAK9D,MAAM4B,cAAckC,EAAK/F,gFAI9B,OACEkC,EAAAC,EAAAC,cAAA,QAAMyG,SAAUpB,KAAKR,aAAc5E,UAAU,eAC3CH,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACE0E,KAAK,QACLlI,KAAK,QACL0G,MAAOmC,KAAKzH,MAAM4J,MAClBP,SAAU5B,KAAKqC,eAEjB5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACExD,KAAK,WACLkI,KAAK,WACLxB,MAAOmC,KAAKzH,MAAM6J,SAClBR,SAAU5B,KAAKqC,eAEjB5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBAAuBzD,KAAK,WAC7CsD,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAM3H,UAAU,OAAO4H,MAAO,CAAEC,eAAgB,QAAUC,GAAG,UAA7D,oBAzCWT,aAwDN9H,qBACb,KATyB,SAAAjD,GAAQ,OACjCmD,YACE,CACE+B,iBAEFlF,IAGWiD,CAGb+H,IC3DIS,8MACJpK,MAAQ,CACN4J,MAAO,GACPC,SAAU,MAGZC,aAAe,SAAA5C,GACbnB,EAAKa,SAALxG,OAAAyG,EAAA,EAAAzG,CAAA,GACG8G,EAAM6C,OAAOjD,KAAOI,EAAM6C,OAAOzE,WAItC2B,aAAe,SAAAC,GACbA,EAAMC,iBACNpB,EAAK9D,MAAMwC,eAAesB,EAAK/F,gFAI/B,OACEkC,EAAAC,EAAAC,cAAA,QAAMyG,SAAUpB,KAAKR,aAAc5E,UAAU,eAC3CH,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACE0E,KAAK,QACLlI,KAAK,QACL0G,MAAOmC,KAAKzH,MAAM4J,MAClBP,SAAU5B,KAAKqC,eAEjB5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACExD,KAAK,WACLkI,KAAK,WACLxB,MAAOmC,KAAKzH,MAAM6J,SAClBR,SAAU5B,KAAKqC,eAEjB5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBAAuBzD,KAAK,WAC7CsD,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAM3H,UAAU,OAAO4H,MAAO,CAAEC,eAAgB,QAAUC,GAAG,WAA7D,sBAxCUT,aA4DL9H,qBAZS,SAAAC,GAAA,MAAe,CACrC+H,MADsB/H,EAAGrB,KACZlB,YAAYsK,QAGA,SAAAjL,GAAQ,OACjCmD,YACE,CACE2C,kBAEF9F,IAGWiD,CAGbwI,IC5DIC,oLAEK,IAAAtE,EAAA0B,KACP,OACEvF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAChBH,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAM3H,UAAU,aAAa4H,MAAO,CAAEC,eAAgB,QAAUC,GAAG,KAAnE,UACAjI,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAM3H,UAAU,aAAa4H,MAAO,CAAEC,eAAgB,QAAUC,GAAG,aAAnE,cACC1C,KAAKxF,MAAMzB,KAAKkH,WACfxF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeiB,QAAU,kBAAMyC,EAAK9D,MAAMgD,eAA5D,UAEA/C,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAM3H,UAAU,aAAa4H,MAAO,CAAEC,eAAgB,QAAUC,GAAG,UAAnE,YAIJjI,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACkI,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjCxI,EAAAC,EAAAC,cAACkI,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWjF,KACzCtD,EAAAC,EAAAC,cAACkI,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWd,KACvCzH,EAAAC,EAAAC,cAACkI,EAAA,MAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWL,cAnB9BV,aAsCH9H,qBAZS,SAAAC,GAAA,MAAe,CACrCrB,KADsBqB,EAAGrB,KACblB,cAGa,SAAAX,GAAQ,OACjCmD,YACE,CACEmD,cAEFtG,IAGWiD,CAGbyI,ICzCIN,kBAASY,SAASC,cAAc,UAEtChF,iBACE1D,EAAAC,EAAAC,cAACyI,EAAA,SAAD,CAAUC,MAAOA,GACf5I,EAAAC,EAAAC,cAAC2I,EAAA,gBAAD,CAAiBrK,QAASA,GACxBwB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4I,GAAD,SAINjB","file":"static/js/main.18a4a7e8.chunk.js","sourcesContent":["export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED'\nexport const INCREMENT = 'counter/INCREMENT'\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED'\nexport const DECREMENT = 'counter/DECREMENT'\n\nconst initialState = {\n  count: 0,\n  isIncrementing: false,\n  isDecrementing: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_REQUESTED:\n      return {\n        ...state,\n        isIncrementing: true\n      }\n\n    case INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1,\n        isIncrementing: !state.isIncrementing\n      }\n\n    case DECREMENT_REQUESTED:\n      return {\n        ...state,\n        isDecrementing: true\n      }\n\n    case DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1,\n        isDecrementing: !state.isDecrementing\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const increment = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: INCREMENT\n    })\n  }\n}\n\nexport const incrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: INCREMENT\n      })\n    }, 3000)\n  }\n}\n\nexport const decrement = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: DECREMENT\n    })\n  }\n}\n\nexport const decrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: DECREMENT\n      })\n    }, 3000)\n  }\n}\n","import axios from 'axios';\n\nexport const UPDATE_POSTS = 'posts/UPDATE_POSTS'\nexport const UPDATE_POSTS_REQUESTED = 'posts/UPDATE_POSTS_REQUESTED'\nexport const UPDATE_POSTS_ERR = 'posts/UPDATE_POSTS_ERR'\nexport const UPDATE_MSG = 'posts/UPDATE_MSG'\n\nexport const getPosts = () => {\n    return dispatch => {\n      dispatch({\n        type: UPDATE_POSTS_REQUESTED\n      })\n\n      \n      return axios.get(\"http://localhost:5000/api/hello-world\").then(res => {\n        // console.log(\"hello world res: \", res);\n        dispatch({\n          type: UPDATE_MSG,\n          payload: res.data\n        })\n      })\n\n      axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((res) => {\n          console.log(\"get posts res: \", res);\n          dispatch({\n              type: UPDATE_POSTS,\n              payload: res.data\n          })\n      }).catch(err => {\n          console.err(err);\n          dispatch({\n              type: UPDATE_POSTS_ERR\n          })\n      })\n    }\n  }","// import all the actions here\n\nimport { \n    UPDATE_POSTS,\n    UPDATE_POSTS_REQUESTED,\n    UPDATE_POSTS_ERR,\n    UPDATE_MSG\n } from '../actions/posts';\n\nconst initialState = {\n    posts: [],\n    isFetchingPosts: false,\n    msg: \"\"\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n        isLoading: false\n      }\n    \n    case UPDATE_POSTS_REQUESTED: \n      return {\n          ...state,\n          isLoading: true\n      }\n\n    case UPDATE_POSTS_ERR:\n      return {\n          ...state,\n          isLoading: false\n      }\n    \n    case UPDATE_MSG:\n      return {\n        ...state,\n        msg: action.payload.msg\n      }\n\n    default:\n      return state\n  }\n}\n","export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED'\nexport const INCREMENT = 'counter/INCREMENT'\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED'\nexport const DECREMENT = 'counter/DECREMENT'\n\nconst initialState = {\n  currentUser: {}\n}\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_USER':\n      return {...state, currentUser: action.payload}\n    case 'LOGOUT_USER':\n      return {...state, currentUser: {} }\n    case 'INVALID_USER':\n      return {...state, currentUser: {} }\n    default:\n      return state;\n  }\n}","import axios from 'axios';\n\nexport const GET_PATIENTS = 'posts/GET_PATIENTS'\nexport const GET_PATIENTS_REQUESTED = 'posts/GET_PATIENTS_REQUESTED'\nexport const GET_PATIENTS_ERR = 'posts/GET_POSTS_ERR'\n\nexport const getPatients = () => {\n    return dispatch => {\n      dispatch({\n        type: GET_PATIENTS_REQUESTED\n      })\n\n      axios.get(\"http://localhost:5000/patient\").then((res) => {\n          console.log(\"get patients res: \", res);\n          dispatch({\n              type: GET_PATIENTS,\n              payload: res.data\n          })\n      }).catch(err => {\n          console.log(err);\n          dispatch({\n              type: GET_PATIENTS_ERR\n          })\n      })\n    }\n  }","// import all the actions here\n\nimport { \n    GET_PATIENTS,\n    GET_PATIENTS_REQUESTED,\n    GET_PATIENTS_ERR\n } from '../actions/patients';\n\nconst initialState = {\n    patientsList: [],\n    isFetchingPatient: false,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PATIENTS:\n      return {\n        ...state,\n        patientsList: action.payload,\n        isLoading: false\n      }\n    \n    case GET_PATIENTS_REQUESTED: \n      return {\n          ...state,\n          isLoading: true\n      }\n\n    case GET_PATIENTS_ERR:\n      return {\n          ...state,\n          isLoading: false\n      }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport counter from './counter'\nimport posts from './posts'\nimport user from './user'\nimport patients from './patients'\n\nexport default combineReducers({\n  counter,\n  posts,\n  user,\n  patients\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport * as History from 'history'\nimport rootReducer from './reducers'\n\nexport const history = History.createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED'\nexport const INCREMENT = 'counter/INCREMENT'\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED'\nexport const DECREMENT = 'counter/DECREMENT'\n\nexport const increment = () => {\n    return dispatch => {\n        dispatch({\n            type: INCREMENT_REQUESTED\n        })\n\n        dispatch({\n            type: INCREMENT\n        })\n    }\n}\n\nexport const incrementAsync = () => {\n    return dispatch => {\n        dispatch({\n            type: INCREMENT_REQUESTED\n        })\n\n        return setTimeout(() => {\n            dispatch({\n                type: INCREMENT\n            })\n        }, 3000)\n    }\n}\n\nexport const decrement = () => {\n    return dispatch => {\n        dispatch({\n            type: DECREMENT_REQUESTED\n        })\n\n        dispatch({\n            type: DECREMENT\n        })\n    }\n}\n\nexport const decrementAsync = () => {\n    return dispatch => {\n        dispatch({\n            type: DECREMENT_REQUESTED\n        })\n\n        return setTimeout(() => {\n            dispatch({\n                type: DECREMENT\n            })\n        }, 3000)\n    }\n}","import React from 'react'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { Button, Header,  Image, Modal } from 'semantic-ui-react'\nimport {\n  increment,\n  incrementAsync,\n  decrement,\n  decrementAsync\n} from '../../actions/counter'\n\nimport {\n  getPosts\n} from '../../actions/posts'\n\nconst Home = props => (\n  <div className=\"content-box\">\n    <h1>Home</h1>\n    <Modal trigger={<Button>Show Modal</Button>}>\n    <Modal.Header>Select a Photo</Modal.Header>\n      <Modal.Content image>\n        <Image wrapped size='medium' src='/images/avatar/large/rachel.png' />\n        <Modal.Description>\n          <Header>Default Profile Image</Header>\n          <p>\n            We've found the following gravatar image associated with your e-mail\n            address.\n          </p>\n          <p>Is it okay to use this photo?</p>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n    <Button content='Primary' primary />\n    <Button content='Secondary' secondary />\n    <div class=\"ui divider\"></div>\n    <Header as='h1'>First Header</Header>\n    <Header as='h2'>Second Header</Header>\n    <Header as='h3'>Third Header</Header>\n    <Header as='h4'>Fourth Header</Header>\n    <Header as='h5'>Fifth Header</Header>\n    <Header as='h6'>Sixth Header</Header>\n\n    <p>Count: {props.count}</p>\n\n    <p>Message from server: {props.msg}</p>\n\n    <p>\n      <button onClick={props.increment}>Increment</button>\n      <button onClick={props.incrementAsync} disabled={props.isIncrementing}>\n        Increment Async\n      </button>\n    </p>\n\n    <p>\n      <button onClick={props.decrement}>Decrement</button>\n      <button onClick={props.decrementAsync} disabled={props.isDecrementing}>\n        Decrement Async\n      </button>\n    </p>\n\n    <p>\n      <button onClick={() => props.changePage()}>\n        Go to about page via redux\n      </button>\n    </p>\n\n    <p>\n      <button onClick={() => props.getPosts()}>\n        Click me to get posts from server.\n      </button>\n    </p>\n\n    <p>\n      <ul>\n        {props.posts.map((post, i) => {\n          return <li key={i}>{post.title}</li>\n        })}\n      </ul>\n    </p>\n\n  </div>\n)\n\nconst mapStateToProps = ({ counter, posts }) => ({\n  count: counter.count,\n  isIncrementing: counter.isIncrementing,\n  isDecrementing: counter.isDecrementing,\n  posts: posts.posts,\n  msg: posts.msg\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      increment,\n      incrementAsync,\n      decrement,\n      decrementAsync,\n      changePage: () => push('/about-us'),\n      getPosts\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home)\n","import { push } from 'connected-react-router'\nimport axios from 'axios';\n\nexport const userPostFetch = user => {\n  return dispatch => {\n    return fetch(\"http://localhost:5000/user/register\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify(user)\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.message) {\n          // TODO: do something with error message\n          console.log(data)\n        } else {\n          dispatch(userLoginFetch(user)).then(() => { // log the user in\n            dispatch(push('/patients'))\n          }) \n        }\n      })\n  }\n}\n\nexport const userLoginFetch = user => {\n  return dispatch => {\n    return fetch(\"http://localhost:5000/user/auth\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify(user)\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.message) {\n          // Invalid post raise an error, i.e. password not filled\n          console.log(data.message)\n        } else {\n          localStorage.setItem(\"token\", data.token);\n          dispatch(getCurrentUser()).then(() => {\n            dispatch(push('/patients'))\n          })\n        }\n      })\n  }\n}\n\nexport const getCurrentUser = () => {\n  return dispatch => {\n    const token = localStorage.token;\n      return axios.get(\"http://localhost:5000/user/current\", {\n        'headers': {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      })\n        .then(res => {\n          if (res.msg) {\n            console.log(res)\n            // invalid token, remove current token\n            localStorage.removeItem(\"token\")\n            dispatch(push('/login'))\n          } else {\n            console.log(res)\n            dispatch(loginUser(res.data))\n          }\n        }).catch((err) => { \n          dispatch(push('/login'))\n          return {'message' : 'Not authorized'}\n        } )\n    }\n}\n\nexport const logoutUser = () => {\n  return dispatch => {\n    localStorage.removeItem(\"token\")\n    dispatch(logoutUserAction())\n    dispatch(push('/login'))\n  }\n}\n\nconst logoutUserAction = () => ({\n  type: 'LOGOUT_USER'\n})\n\nconst loginUser = userObj => ({\n  type: 'LOGIN_USER',\n  payload: userObj\n})\n\nconst invalidUser = () => ({\n  type: 'INVALID_USER'\n})","import React, {Component} from 'react';\nimport MaterialTable from 'material-table';\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getPatients } from '../../actions/patients';\nimport { getCurrentUser } from '../../actions/users';\nimport { getPosts } from '../../actions/posts';\n\nimport { Button,\n  Header, Image, Modal,\n  Divider, Form, Select,\n  Input, TextArea\n} from 'semantic-ui-react'\n\nconst sexOptions = [\n  { key: 'm', text: 'Male', value: 'M' },\n  { key: 'f', text: 'Female', value: 'F' },\n  { key: 'o', text: 'Other', value: 'I' },\n]\n\nconst pregOptions = [\n  { key: 'y', text: 'Yes', value: true },\n  { key: 'n', text: 'No', value: false },\n]\n\nclass PatientPage extends Component {\n  state = {\n    columns: [\n      { title: 'Patient ID', field: 'patientId', defaultSort: 'asc' },\n      { title: 'Patient Name', field: 'patientName',\n        render: rowData => \n          <div>\n            <p>{rowData.patientName}</p>\n            <a onClick={() => this.openModal({rowData})}>View Info</a>\n          </div>  \n      },\n      { title: 'Readings', render: rowData => <a onClick={() => console.log(`clicked ${rowData}`)}>View Readings</a>},\n      { title: 'Follow Up Status', field: 'followUp',\n        render: rowData => rowData.isPregnant ? (<button>Follow Up</button>) : (<p>Not needed</p>) },\n    ],\n    data: [],\n    selectedPatient: { patientId: '', patientName: 'Test', \n                       patientSex: 'F', medicalHistory: '',\n                       drugHistory: '', villageNumber:''\n                      },\n    displayModal: false\n  }\n\n  componentDidMount = () => {\n    console.log('componentDidMount')\n    this.props.getCurrentUser().then((err) => {\n      if (err !== undefined) {\n        // error from getCurrentUser(), don't get patients\n        return\n      }\n      this.props.getPatients()\n    })\n  }\n\n  handleSelectChange = (e, value) => {\n    console.log(value)\n    this.setState({'selectedPatient': { ...this.state.selectedPatient, [value.name] : value.value } })\n  }\n\n  openModal = (patientData) => {\n    console.log(patientData)\n    console.log('open modal')\n    this.setState({ displayModal: true, selectedPatient: patientData['rowData'] })\n  }\n\n  closeModal = () => {\n    console.log('close modal')\n    this.setState({ displayModal: false })\n  }\n  \n  handleSubmit = (event) => {\n    event.preventDefault();\n    let patientData = this.state.selectedPatient\n\n    // delete any unnecessary fields\n    delete patientData.readings\n    delete patientData.tableData\n    delete patientData.patientId\n\n    let patientJSON = JSON.stringify({ 'patient' : patientData });\n    console.log(patientJSON)\n\n    // TODO: make request to update patient record\n  }\n\n  render() {\n    // don't render page if user is not logged in\n    if (!this.props.user.isLoggedIn) {\n      return <div />\n    }\n\n    return (\n        <div >\n          <h1>Patients List</h1>\n          <p> only logged in users are allowed to see this </p>\n          <MaterialTable\n            title=\"Patients Table\"\n            columns={this.state.columns}\n            data={this.props.data}\n            editable={{\n              onRowAdd: newData =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    const data = [...this.state.data];\n                    data.push(newData);\n                    this.setState({ ...this.state, data });\n                  }, 600);\n                }),\n              onRowUpdate: (newData, oldData) =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    const data = [...this.state.data];\n                    data[data.indexOf(oldData)] = newData;\n                    this.setState({ ...this.state, data });\n                  }, 600);\n                }),\n              onRowDelete: oldData =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    const data = [...this.state.data];\n                    data.splice(data.indexOf(oldData), 1);\n                    this.setState({ ...this.state, data });\n                  }, 600);\n                }),\n            }}\n          />\n\n          <Modal closeIcon onClose={this.closeModal} open={this.state.displayModal}>\n            <Modal.Header>Patient Information</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <Header>Patient ID #{this.state.selectedPatient.patientId}</Header>\n                <Divider />\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group widths='equal'>\n                    <Form.Field\n                      name=\"patientName\"\n                      value={this.state.selectedPatient.patientName}\n                      control={Input}\n                      label='Name'\n                      placeholder='Patient Name'\n                      onChange={this.handleSelectChange}\n                    />\n                    <Form.Field\n                      name=\"patientAge\"\n                      value={this.state.selectedPatient.patientAge}\n                      control={Input}\n                      label='Age'\n                      placeholder='Patient age'\n                      onChange={this.handleSelectChange}\n                    />\n                    <Form.Field\n                      name=\"patientSex\"\n                      control={Select}\n                      value={this.state.selectedPatient.patientSex}\n                      label='Gender'\n                      options={sexOptions}\n                      placeholder='Gender'\n                      onChange={this.handleSelectChange}\n                    />\n                  </Form.Group>\n                  <Form.Group widths='equal'>\n                    <Form.Field\n                      name='villageNumber'\n                      value={this.state.selectedPatient.villageNumber}\n                      control={Input}\n                      label='Village Number'\n                      placeholder='Village Number'\n                      onChange={this.handleSelectChange}\n                    />\n                    <Form.Field\n                      name='isPregnant'\n                      value={this.state.selectedPatient.isPregnant}\n                      control={Select}\n                      label='Pregant'\n                      options={pregOptions}\n                      onChange={this.handleSelectChange}\n                    />\n                  </Form.Group>\n                  <Form.Field\n                    name=\"drugHistory\"\n                    value={this.state.selectedPatient.drugHistory || ''}\n                    control={TextArea}\n                    label='Drug History'\n                    placeholder=\"Patient's drug history...\"\n                    onChange={this.handleSelectChange}\n                  />\n                  <Form.Field\n                    name=\"medicalHistory\"\n                    value={this.state.selectedPatient.medicalHistory || ''}\n                    control={TextArea}\n                    label='Medical History'\n                    placeholder=\"Patient's medical history...\"\n                    onChange={this.handleSelectChange}\n                  />\n                  <Form.Field control={Button}>Submit</Form.Field>\n                </Form>\n\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n\n        </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = ({ patients, user }) => ({\n  patients : patients,\n  data : patients.patientsList,\n  user : user.currentUser\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getPatients,\n      getCurrentUser,\n      getPosts\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PatientPage)\n","import React, {Component} from 'react';\nimport { push } from 'connected-react-router'\nimport { Route, Link } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { userPostFetch } from '../../actions/users'\n\nclass Signup extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    console.log('submitted!')\n    this.props.userPostFetch(this.state)\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"content-box\">\n        <h1>Sign Up</h1>\n\n        <label>Email</label>\n        <input\n          name='email'\n          type='email'\n          value={this.state.email}\n          onChange={this.handleChange}\n          />\n        <br/>\n        <label>Password</label>\n        <input\n          type='password'\n          name='password'\n          value={this.state.password}\n          onChange={this.handleChange}\n          />\n        <br/>\n        <div className=\"flexbox\">\n          <input className=\"contant-submit white\" type='submit'/>\n          <Link className=\"link\" style={{ textDecoration: 'none' }} to=\"/login\"> Login </Link>\n        </div>\n      </form>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      userPostFetch\n    },\n    dispatch\n  )\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Signup)\n","import React, {Component} from 'react';\nimport { Route, Link } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { userLoginFetch } from '../../actions/users';\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.userLoginFetch(this.state)\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"content-box\">\n        <h1>Login</h1>\n\n        <label>Email</label>\n        <input\n          name='email'\n          type='email'\n          value={this.state.email}\n          onChange={this.handleChange}\n          />\n        <br/>\n        <label>Password</label>\n        <input\n          type='password'\n          name='password'\n          value={this.state.password}\n          onChange={this.handleChange}\n          />\n        <br/>\n        <div className=\"flexbox\">\n          <input className=\"contant-submit white\" type='submit'/>\n          <Link className=\"link\" style={{ textDecoration: 'none' }} to=\"/signup\"> Sign up </Link>\n        </div>\n        \n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  email : user.currentUser.email,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      userLoginFetch,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login)\n","import React, {Component} from 'react';\nimport { Route, Link } from 'react-router-dom'\nimport Home from '../home'\nimport PatientPage from '../patientPage'\nimport Signup from '../signup'\nimport Login from '../login'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { logoutUser } from '../../actions/users';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <header className=\"flexbox\"> \n          <Link className=\"link white\" style={{ textDecoration: 'none' }} to=\"/\"> Home </Link>\n          <Link className=\"link white\" style={{ textDecoration: 'none' }} to=\"/patients\"> Patients </Link>\n          {this.props.user.isLoggedIn ? (\n            <button className=\"logout white\" onClick={ () => this.props.logoutUser() }>Logout</button>\n          ) : (\n            <Link className=\"link white\" style={{ textDecoration: 'none' }} to=\"/login\"> Login </Link>\n          )}\n        </header>\n        \n        <main>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/patients\" component={PatientPage} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/login\" component={Login} />\n        </main>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  user : user.currentUser,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      logoutUser\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}