{"version":3,"sources":["reducers/counter.js","serverUrl.js","actions/posts.js","reducers/posts.js","reducers/user.js","actions/patients.js","reducers/patients.js","reducers/index.js","store.js","containers/home/index.js","actions/users.js","containers/patientPage/index.js","containers/signup/index.js","containers/login/index.js","containers/app/index.js","index.js"],"names":["initialState","count","isIncrementing","isDecrementing","console","log","process","BASE_URL","getPosts","dispatch","type","axios","get","then","res","payload","data","posts","isFetchingPosts","msg","currentUser","getPatients","catch","err","patientsList","isFetchingPatient","combineReducers","counter","state","arguments","length","undefined","Object","objectSpread","action","isLoading","user","patients","history","History","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","connectRouter","rootReducer","connect","_ref","props","react_default","a","createElement","react_router","to","userPostFetch","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","resp","json","message","userLoginFetch","push","localStorage","setItem","token","getCurrentUser","Authorization","removeItem","loginUser","logoutUser","logoutUserAction","userObj","sexOptions","key","text","value","pregOptions","PatientPage","columns","title","field","defaultSort","render","rowData","patientName","onClick","_this","openPatientModal","openReadingModal","isPregnant","selectedPatient","patientId","patientSex","medicalHistory","drugHistory","villageNumber","readings","displayPatientModal","displayReadingModal","componentDidMount","handleSelectChange","e","setState","defineProperty","name","patientData","closePatientModal","closeReadingModal","handleSubmit","event","preventDefault","tableData","patientJSON","patient","_this2","this","isLoggedIn","i","Button","Divider","dist_default","editable","onRowAdd","newData","Promise","resolve","setTimeout","toConsumableArray","onRowUpdate","oldData","indexOf","onRowDelete","splice","Modal","closeIcon","onClose","open","Header","Content","scrolling","Description","Form","onSubmit","Group","widths","Field","control","Input","label","placeholder","onChange","patientAge","Select","options","TextArea","Component","bindActionCreators","Signup","email","password","handleChange","target","className","react_router_dom","style","textDecoration","Login","App","activeItem","handleItemClick","color","Menu","inverted","Item","active","exact","path","component","Home","_ref2","document","querySelector","es","store","lib","app"],"mappings":"gQAKMA,EAAe,CACnBC,MAAO,EACPC,gBAAgB,EAChBC,gBAAgB,qBCRlBC,QAAQC,IAAI,uBAAwBC,cAUrBC,MALA,sCCIFC,EAAW,WACpB,OAAO,SAAAC,GAML,OALAA,EAAS,CACPC,KAP8B,iCAWzBC,IAAMC,IAAIL,EAAW,gBAAgBM,KAAK,SAAAC,GAE/CL,EAAS,CACPC,KAZgB,mBAahBK,QAASD,EAAIE,WCXjBhB,EAAe,CACjBiB,MAAO,GACPC,iBAAiB,EACjBC,IAAK,ICPHnB,EAAe,CACnBoB,YAAa,ICEFC,EAAc,WACvB,OAAO,SAAAZ,GACLA,EAAS,CACPC,KAN8B,iCAShCC,IAAMC,IAAIL,EAAW,oBAAoBM,KAAK,SAACC,GAC3CV,QAAQC,IAAI,qBAAsBS,GAClCL,EAAS,CACLC,KAbc,qBAcdK,QAASD,EAAIE,SAElBM,MAAM,SAAAC,GACLnB,QAAQC,IAAIkB,GACZd,EAAS,CACLC,KAjBkB,4BCE1BV,EAAe,CACjBwB,aAAc,GACdC,mBAAmB,GCJRC,cAAgB,CAC7BC,QPIa,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB7B,EACtB,QAD+C6B,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChCrB,MACb,IAb+B,8BAc7B,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEE1B,gBAAgB,IAGpB,IAlBqB,oBAmBnB,OAAO8B,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEE3B,MAAO2B,EAAM3B,MAAQ,EACrBC,gBAAiB0B,EAAM1B,iBAG3B,IAxB+B,8BAyB7B,OAAO8B,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEzB,gBAAgB,IAGpB,IA7BqB,oBA8BnB,OAAO6B,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEE3B,MAAO2B,EAAM3B,MAAQ,EACrBE,gBAAiByB,EAAMzB,iBAG3B,QACE,OAAOyB,IOhCXX,MJOa,WAAkC,IAAjCW,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB7B,EAAckC,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQG,EAAOxB,MACb,IDbwB,qBCctB,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEX,MAAOiB,EAAOnB,QACdoB,WAAW,IAGf,IDnBkC,+BCoBhC,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIO,WAAW,IAGjB,IDxB4B,yBCyB1B,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIO,WAAW,IAGjB,ID7BsB,mBC8BpB,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEET,IAAKe,EAAOnB,QAAQI,MAGxB,QACE,OAAOS,IIlCXQ,KHDa,WAAkC,IAAjCR,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB7B,EAAckC,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQG,EAAOxB,MACb,IAAK,aACH,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GAAIJ,EAAX,CAAkBR,YAAac,EAAOnB,UACxC,IAAK,cAEL,IAAK,eACH,OAAOiB,OAAAC,EAAA,EAAAD,CAAA,GAAIJ,EAAX,CAAkBR,YAAa,KACjC,QACE,OAAOQ,IGPXS,SDGa,WAAkC,IAAjCT,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB7B,EAAckC,EAAWL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQG,EAAOxB,MACb,IDXwB,qBCYtB,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEJ,aAAcU,EAAOnB,QACrBoB,WAAW,IAGf,IDjBkC,+BCkBhC,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIO,WAAW,IAGjB,IDtB4B,sBCuB1B,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACAJ,EADP,CAEIO,WAAW,IAGjB,QACE,OAAOP,ME7BAU,EAAUC,MAIjBC,EAAa,CAACC,IAAOC,2BAAiBJ,IAUtCK,EAAoBC,IAAOC,WAAP,GACxBC,IAAeD,WAAf,EAAmBL,IADKO,OAXR,KAgBHC,cACbC,wBAAcX,EAAdW,CAAuBC,GAlBJ,GAoBnBP,yECRaQ,oBALS,SAAAC,GAAA,MAAe,CACrChC,YADsBgC,EAAGhB,KACPhB,cAIL+B,CAZF,SAAAE,GACX,OACEA,EAAMjC,YACJkC,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAUC,GAAG,cAAiBJ,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAUC,GAAG,iDCNpCC,EAAgB,SAAAvB,GAC3B,OAAO,SAAA3B,GACL,OAAOmD,MAAMrD,EAAW,iBAAkB,CACxCsD,OAAQ,OACRC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,oBAEVC,KAAMC,KAAKC,UAAU/B,KAEpBvB,KAAK,SAAAuD,GAAI,OAAIA,EAAKC,SAClBxD,KAAK,SAAAG,GACAA,EAAKsD,QAEPlE,QAAQC,IAAIW,GAEZP,EAAS8D,EAAenC,IAAOvB,KAAK,WAClCJ,EAAS+D,eAAK,oBAObD,EAAiB,SAAAnC,GAC5B,OAAO,SAAA3B,GACL,OAAOmD,MAAMrD,EAAW,aAAc,CACpCsD,OAAQ,OACRC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,oBAEVC,KAAMC,KAAKC,UAAU/B,KAEpBvB,KAAK,SAAAuD,GAAI,OAAIA,EAAKC,SAClBxD,KAAK,SAAAG,GACAA,EAAKsD,QAEPlE,QAAQC,IAAIW,EAAKsD,UAEjBG,aAAaC,QAAQ,QAAS1D,EAAK2D,OACnClE,EAASmE,KAAkB/D,KAAK,WAC9BJ,EAAS+D,eAAK,qBAObI,EAAiB,WAC5B,OAAO,SAAAnE,GACL,IAAMkE,EAAQF,aAAaE,MACzB,OAAOhE,IAAMC,IAAIL,EAAW,gBAAiB,CAC3CuD,QAAW,CACTC,eAAgB,mBAChBC,OAAU,mBACVa,cAAA,UAAA9B,OAA2B4B,MAG5B9D,KAAK,SAAAC,GACAA,EAAIK,KACNf,QAAQC,IAAIS,GAEZ2D,aAAaK,WAAW,SACxBrE,EAAS+D,eAAK,aAEdpE,QAAQC,IAAIS,GACZL,EAASsE,EAAUjE,EAAIE,UAExBM,MAAM,SAACC,GAER,OADAd,EAAS+D,eAAK,WACP,CAACF,QAAY,sBAKjBU,EAAa,WACxB,OAAO,SAAAvE,GACLgE,aAAaK,WAAW,SACxBrE,EAASwE,KACTxE,EAAS+D,eAAK,aAIZS,EAAmB,iBAAO,CAC9BvE,KAAM,gBAGFqE,EAAY,SAAAG,GAAO,MAAK,CAC5BxE,KAAM,aACNK,QAASmE,4EChFLC,EAAa,CACjB,CAAEC,IAAK,IAAKC,KAAM,OAAQC,MAAO,KACjC,CAAEF,IAAK,IAAKC,KAAM,SAAUC,MAAO,KACnC,CAAEF,IAAK,IAAKC,KAAM,QAASC,MAAO,MAG9BC,GAAc,CAClB,CAAEH,IAAK,IAAKC,KAAM,MAAOC,OAAO,GAChC,CAAEF,IAAK,IAAKC,KAAM,KAAMC,OAAO,IAG3BE,8MACJ5D,MAAQ,CACN6D,QAAS,CACP,CAAEC,MAAO,aAAcC,MAAO,YAAaC,YAAa,OACxD,CAAEF,MAAO,eAAgBC,MAAO,cAC9BE,OAAQ,SAAAC,GAAO,OACbxC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAIsC,EAAQC,aACZzC,EAAAC,EAAAC,cAAA,KAAGwC,QAAS,kBAAMC,EAAKC,iBAAiB,CAACJ,cAAzC,gBAGN,CAAEJ,MAAO,WAAYG,OAAQ,SAAAC,GAAO,OAAIxC,EAAAC,EAAAC,cAAA,KAAGwC,QAAS,kBAAMC,EAAKE,iBAAiB,CAACL,cAAzC,kBACxC,CAAEJ,MAAO,mBAAoBC,MAAO,WAClCE,OAAQ,SAAAC,GAAO,OAAIA,EAAQM,WAAc9C,EAAAC,EAAAC,cAAA,2BAA+BF,EAAAC,EAAAC,cAAA,0BAE5ExC,KAAM,GACNqF,gBAAiB,CAAEC,UAAW,GAAIP,YAAa,OAC5BQ,WAAY,IAAKC,eAAgB,GACjCC,YAAa,GAAIC,cAAc,GAAIC,SAAU,IAEhEC,qBAAqB,EACrBC,qBAAqB,KAGvBC,kBAAoB,WAClB1G,QAAQC,IAAI,qBACZ4F,EAAK5C,MAAMuB,iBAAiB/D,KAAK,SAACU,QACpBQ,IAARR,GAIJ0E,EAAK5C,MAAMhC,mBAIf0F,mBAAqB,SAACC,EAAG1B,GACvBlF,QAAQC,IAAIiF,GACZW,EAAKgB,SAAS,CAACZ,gBAAkBrE,OAAAC,EAAA,EAAAD,CAAA,GAAMiE,EAAKrE,MAAMyE,gBAAnCrE,OAAAkF,EAAA,EAAAlF,CAAA,GAAqDsD,EAAM6B,KAAQ7B,EAAMA,aAG1FY,iBAAmB,SAACkB,GAClBhH,QAAQC,IAAI+G,GACZhH,QAAQC,IAAI,sBACZ4F,EAAKgB,SAAS,CAAEL,qBAAqB,EAAMP,gBAAiBe,EAAW,aAGzEC,kBAAoB,WAClBjH,QAAQC,IAAI,uBACZ4F,EAAKgB,SAAS,CAAEL,qBAAqB,OAGvCT,iBAAmB,SAACiB,GAClBhH,QAAQC,IAAI+G,GACZhH,QAAQC,IAAI,sBACZ4F,EAAKgB,SAAS,CAAEJ,qBAAqB,EAAMR,gBAAiBe,EAAW,aAGzEE,kBAAoB,WAClBlH,QAAQC,IAAI,uBACZ4F,EAAKgB,SAAS,CAAEJ,qBAAqB,OAGvCU,aAAe,SAACC,GACdA,EAAMC,iBACN,IAAIL,EAAcnB,EAAKrE,MAAMyE,uBAGtBe,EAAYT,gBACZS,EAAYM,iBACZN,EAAYd,UAEnB,IAAIqB,EAAczD,KAAKC,UAAU,CAAEyD,QAAYR,IAC/ChH,QAAQC,IAAIsH,4EAKL,IAAAE,EAAAC,KAEP,IAAKA,KAAKzE,MAAMjB,KAAK2F,WACnB,OAAOzE,EAAAC,EAAAC,cAAA,YAGT,IAAImD,EAAW,GACf,GAAImB,KAAKlG,MAAMyE,gBAAgBM,SAAS7E,OAAS,EAC/C,IAAK,IAAIkG,EAAI,EAAGA,EAAIF,KAAKlG,MAAMyE,gBAAgBM,SAAS7E,OAAQkG,IAC9DrB,EAASnC,KAAKlB,EAAAC,EAAAC,cAAA,oBAAYwE,EAAE,IAC5BrB,EAASnC,KAAKlB,EAAAC,EAAAC,cAAA,2BAAmBsE,KAAKlG,MAAMyE,gBAAgBM,SAASqB,GAApC,eACjCrB,EAASnC,KAAKlB,EAAAC,EAAAC,cAAA,0BAAkBsE,KAAKlG,MAAMyE,gBAAgBM,SAASqB,GAApC,cAChCrB,EAASnC,KAAKlB,EAAAC,EAAAC,cAAA,yBAAiBsE,KAAKlG,MAAMyE,gBAAgBM,SAASqB,GAApC,aAE3BF,KAAKlG,MAAMyE,gBAAgBM,SAASqB,GAApC,SACFrB,EAASnC,KAAKlB,EAAAC,EAAAC,cAAA,yCAAiCsE,KAAKlG,MAAMyE,gBAAgBM,SAASqB,GAApC,UAC/CrB,EAASnC,KAAKlB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,oBAEdtB,EAASnC,KAAKlB,EAAAC,EAAAC,cAAA,4CAEhBmD,EAASnC,KAAKlB,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,OAKlB,OACI5E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,2DACAF,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CACEmC,MAAM,iBACND,QAASqC,KAAKlG,MAAM6D,QACpBzE,KAAM8G,KAAKzE,MAAMrC,KACjBoH,SAAU,CACRC,SAAU,SAAAC,GAAO,OACf,IAAIC,QAAQ,SAAAC,GACVC,WAAW,WACTD,IACA,IAAMxH,EAAIgB,OAAA0G,EAAA,EAAA1G,CAAO6F,EAAKjG,MAAMZ,MAC5BA,EAAKwD,KAAK8D,GACVT,EAAKZ,SAALjF,OAAAC,EAAA,EAAAD,CAAA,GAAmB6F,EAAKjG,MAAxB,CAA+BZ,WAC9B,QAEP2H,YAAa,SAACL,EAASM,GAAV,OACX,IAAIL,QAAQ,SAAAC,GACVC,WAAW,WACTD,IACA,IAAMxH,EAAIgB,OAAA0G,EAAA,EAAA1G,CAAO6F,EAAKjG,MAAMZ,MAC5BA,EAAKA,EAAK6H,QAAQD,IAAYN,EAC9BT,EAAKZ,SAALjF,OAAAC,EAAA,EAAAD,CAAA,GAAmB6F,EAAKjG,MAAxB,CAA+BZ,WAC9B,QAEP8H,YAAa,SAAAF,GAAO,OAClB,IAAIL,QAAQ,SAAAC,GACVC,WAAW,WACTD,IACA,IAAMxH,EAAIgB,OAAA0G,EAAA,EAAA1G,CAAO6F,EAAKjG,MAAMZ,MAC5BA,EAAK+H,OAAO/H,EAAK6H,QAAQD,GAAU,GACnCf,EAAKZ,SAALjF,OAAAC,EAAA,EAAAD,CAAA,GAAmB6F,EAAKjG,MAAxB,CAA+BZ,WAC9B,WAKXsC,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,WAAS,EAACC,QAASpB,KAAKT,kBAAmB8B,KAAMrB,KAAKlG,MAAMgF,qBACjEtD,EAAAC,EAAAC,cAACwF,EAAA,EAAMI,OAAP,yBACA9F,EAAAC,EAAAC,cAACwF,EAAA,EAAMK,QAAP,CAAeC,WAAS,GACtBhG,EAAAC,EAAAC,cAACwF,EAAA,EAAMO,YAAP,KACEjG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,iCAAkCtB,KAAKlG,MAAMyE,gBAAgBC,WAC7DhD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,MACA5E,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMC,SAAU3B,KAAKP,cACnBjE,EAAAC,EAAAC,cAACgG,EAAA,EAAKE,MAAN,CAAYC,OAAO,SACjBrG,EAAAC,EAAAC,cAACgG,EAAA,EAAKI,MAAN,CACEzC,KAAK,cACL7B,MAAOwC,KAAKlG,MAAMyE,gBAAgBN,YAClC8D,QAASC,IACTC,MAAM,OACNC,YAAY,eACZC,SAAUnC,KAAKf,qBAEjBzD,EAAAC,EAAAC,cAACgG,EAAA,EAAKI,MAAN,CACEzC,KAAK,aACL7B,MAAOwC,KAAKlG,MAAMyE,gBAAgB6D,WAClCL,QAASC,IACTC,MAAM,MACNC,YAAY,cACZC,SAAUnC,KAAKf,qBAEjBzD,EAAAC,EAAAC,cAACgG,EAAA,EAAKI,MAAN,CACEzC,KAAK,aACL0C,QAASM,IACT7E,MAAOwC,KAAKlG,MAAMyE,gBAAgBE,WAClCwD,MAAM,SACNK,QAASjF,EACT6E,YAAY,SACZC,SAAUnC,KAAKf,sBAGnBzD,EAAAC,EAAAC,cAACgG,EAAA,EAAKE,MAAN,CAAYC,OAAO,SACjBrG,EAAAC,EAAAC,cAACgG,EAAA,EAAKI,MAAN,CACEzC,KAAK,gBACL7B,MAAOwC,KAAKlG,MAAMyE,gBAAgBK,cAClCmD,QAASC,IACTC,MAAM,iBACNC,YAAY,iBACZC,SAAUnC,KAAKf,qBAEjBzD,EAAAC,EAAAC,cAACgG,EAAA,EAAKI,MAAN,CACEzC,KAAK,aACL7B,MAAOwC,KAAKlG,MAAMyE,gBAAgBD,WAClCyD,QAASM,IACTJ,MAAM,UACNK,QAAS7E,GACT0E,SAAUnC,KAAKf,sBAGnBzD,EAAAC,EAAAC,cAACgG,EAAA,EAAKI,MAAN,CACEzC,KAAK,cACL7B,MAAOwC,KAAKlG,MAAMyE,gBAAgBI,aAAe,GACjDoD,QAASQ,IACTN,MAAM,eACNC,YAAY,4BACZC,SAAUnC,KAAKf,qBAEjBzD,EAAAC,EAAAC,cAACgG,EAAA,EAAKI,MAAN,CACEzC,KAAK,iBACL7B,MAAOwC,KAAKlG,MAAMyE,gBAAgBG,gBAAkB,GACpDqD,QAASQ,IACTN,MAAM,kBACNC,YAAY,+BACZC,SAAUnC,KAAKf,qBAEjBzD,EAAAC,EAAAC,cAACgG,EAAA,EAAKI,MAAN,CAAYC,QAAS5B,KAArB,cAOR3E,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,WAAS,EAACC,QAASpB,KAAKR,kBAAmB6B,KAAMrB,KAAKlG,MAAMiF,qBACjEvD,EAAAC,EAAAC,cAACwF,EAAA,EAAMI,OAAP,4BACA9F,EAAAC,EAAAC,cAACwF,EAAA,EAAMK,QAAP,CAAeC,WAAS,GACtBhG,EAAAC,EAAAC,cAACwF,EAAA,EAAMO,YAAP,KACEjG,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,oBAAqBtB,KAAKlG,MAAMyE,gBAAgBC,WAChDhD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,MACA5E,EAAAC,EAAAC,cAAA,SAAImD,cA9NM2D,aAyPXnH,qBAhBS,SAAAC,GAAA,IAAGf,EAAHe,EAAGf,SAAUD,EAAbgB,EAAahB,KAAb,MAAyB,CAC/CC,SAAWA,EACXrB,KAAOqB,EAASb,aAChBY,KAAOA,EAAKhB,cAGa,SAAAX,GAAQ,OACjC8J,YACE,CACElJ,cACAuD,iBACApE,YAEFC,IAGW0C,CAGbqC,IC/QIgF,8MACJ5I,MAAQ,CACN6I,MAAO,GACPC,SAAU,MAGZC,aAAe,SAAAnD,GACbvB,EAAKgB,SAALjF,OAAAkF,EAAA,EAAAlF,CAAA,GACGwF,EAAMoD,OAAOzD,KAAOK,EAAMoD,OAAOtF,WAItCiC,aAAe,SAAAC,GACbA,EAAMC,iBACNrH,QAAQC,IAAI,cACZ4F,EAAK5C,MAAMM,cAAcsC,EAAKrE,gFAI9B,OACE0B,EAAAC,EAAAC,cAAA,OAAKqH,UAAU,gBACbvH,EAAAC,EAAAC,cAAA,QAAMiG,SAAU3B,KAAKP,aAAcsD,UAAU,eAC3CvH,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACE2D,KAAK,QACLzG,KAAK,QACL4E,MAAOwC,KAAKlG,MAAM6I,MAClBR,SAAUnC,KAAK6C,eAEjBrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACE9C,KAAK,WACLyG,KAAK,WACL7B,MAAOwC,KAAKlG,MAAM8I,SAClBT,SAAUnC,KAAK6C,eAEjBrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKqH,UAAU,WACbvH,EAAAC,EAAAC,cAAA,SAAOqH,UAAU,uBAAuBnK,KAAK,WAC7C4C,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMD,UAAU,OAAOE,MAAO,CAAEC,eAAgB,QAAUtH,GAAG,UAA7D,qBA1CS4G,aA0DNnH,qBACb,KATyB,SAAA1C,GAAQ,OACjC8J,YACE,CACE5G,iBAEFlD,IAGW0C,CAGbqH,IC3DIS,sNACJrJ,MAAQ,CACN6I,MAAO,GACPC,SAAU,MAGZC,aAAe,SAAAnD,GACbvB,EAAKgB,SAALjF,OAAAkF,EAAA,EAAAlF,CAAA,GACGwF,EAAMoD,OAAOzD,KAAOK,EAAMoD,OAAOtF,WAItCiC,aAAe,SAAAC,GACbA,EAAMC,iBACNxB,EAAK5C,MAAMkB,eAAe0B,EAAKrE,gFAI/B,OACE0B,EAAAC,EAAAC,cAAA,OAAKqH,UAAU,gBACbvH,EAAAC,EAAAC,cAAA,QAAMiG,SAAU3B,KAAKP,aAAcsD,UAAU,eAC3CvH,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACE2D,KAAK,QACLzG,KAAK,QACL4E,MAAOwC,KAAKlG,MAAM6I,MAClBR,SAAUnC,KAAK6C,eAEjBrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACE9C,KAAK,WACLyG,KAAK,WACL7B,MAAOwC,KAAKlG,MAAM8I,SAClBT,SAAUnC,KAAK6C,eAEjBrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKqH,UAAU,WACbvH,EAAAC,EAAAC,cAAA,SAAOqH,UAAU,uBAAuBnK,KAAK,WAC7C4C,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMD,UAAU,OAAOE,MAAO,CAAEC,eAAgB,QAAUtH,GAAG,WAA7D,uBAzCQ4G,cA8DLnH,qBAZS,SAAAC,GAAA,MAAe,CACrCqH,MADsBrH,EAAGhB,KACZhB,YAAYqJ,QAGA,SAAAhK,GAAQ,OACjC8J,YACE,CACEhG,kBAEF9D,IAGW0C,CAGb8H,IC9DIC,8MAMJtJ,MAAQ,CAAEuJ,WAAY,UACtBC,gBAAkB,SAACpE,EAAD5D,GAAA,IAAM+D,EAAN/D,EAAM+D,KAAN,OAAiBlB,EAAKgB,SAAS,CAAEkE,WAAYhE,6EAEtD,IAAAU,EAAAC,KAEGqD,GADUrD,KAAKzE,MAAfgI,MACevD,KAAKlG,MAApBuJ,YAEV,OAEE7H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMD,MAAO,OAAQjG,IAAK,OAAQmG,UAAQ,GACxCjI,EAAAC,EAAAC,cAAC8H,EAAA,EAAKE,KAAN,CAAWrE,KAAK,OAAOsE,OAAuB,SAAfN,EAAuBnF,QAAS8B,KAAKsD,iBAChE9H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMD,UAAU,OAAOE,MAAO,CAAEC,eAAgB,QAAUtH,GAAG,KAA7D,WAGJJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAKE,KAAN,CAAWrE,KAAK,UAAUsE,OAAuB,YAAfN,EAA0BnF,QAAS8B,KAAKsD,iBACxE9H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMD,UAAU,OAAOE,MAAO,CAAEC,eAAgB,QAAUtH,GAAG,aAA7D,eAGFJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAKE,KAAN,CAAWrE,KAAK,QAAQsE,OAAuB,UAAfN,EAAwBnF,QAAS8B,KAAKsD,iBACrEtD,KAAKzE,MAAMjB,KAAK2F,WACfzE,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMD,UAAU,OAAOE,MAAO,CAAEC,eAAgB,QAAUtH,GAAG,IAAIsC,QAAU,kBAAM6B,EAAKxE,MAAM2B,eAA5F,UAEA1B,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMD,UAAU,OAAOE,MAAO,CAAEC,eAAgB,QAAUtH,GAAG,UAA7D,YAIDoE,KAAKzE,MAAMjB,KAAK2F,WACfzE,EAAAC,EAAAC,cAAA,YAEAF,EAAAC,EAAAC,cAAC8H,EAAA,EAAKE,KAAN,CAAWrE,KAAK,SAASsE,OAAuB,WAAfN,EAAyBnF,QAAS8B,KAAKsD,iBACtE9H,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAMD,UAAU,OAAOE,MAAO,CAAEC,eAAgB,QAAUtH,GAAG,WAA7D,cAMNJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOiI,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjCvI,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOiI,OAAK,EAACC,KAAK,YAAYC,UAAWpG,KACzClC,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOiI,OAAK,EAACC,KAAK,UAAUC,UAAWpB,KACvClH,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOiI,OAAK,EAACC,KAAK,SAASC,UAAWX,cA/C9BX,aAkEHnH,qBAZS,SAAA2I,GAAA,MAAe,CACrC1J,KADsB0J,EAAG1J,KACbhB,cAGa,SAAAX,GAAQ,OACjC8J,YACE,CACEvF,cAEFvE,IAGW0C,CAGb+H,kBCpEF9K,QAAQC,IAAI,iBAAmBE,GAE/B,IAAMqK,GAASmB,SAASC,cAAc,SAEtCnG,iBACEvC,EAAAC,EAAAC,cAACyI,EAAA,SAAD,CAAUC,MAAOA,GACf5I,EAAAC,EAAAC,cAAC2I,EAAA,gBAAD,CAAiB7J,QAASA,GACxBgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4I,GAAD,SAINxB","file":"static/js/main.5dddaac2.chunk.js","sourcesContent":["export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED'\nexport const INCREMENT = 'counter/INCREMENT'\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED'\nexport const DECREMENT = 'counter/DECREMENT'\n\nconst initialState = {\n  count: 0,\n  isIncrementing: false,\n  isDecrementing: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_REQUESTED:\n      return {\n        ...state,\n        isIncrementing: true\n      }\n\n    case INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1,\n        isIncrementing: !state.isIncrementing\n      }\n\n    case DECREMENT_REQUESTED:\n      return {\n        ...state,\n        isDecrementing: true\n      }\n\n    case DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1,\n        isDecrementing: !state.isDecrementing\n      }\n\n    default:\n      return state\n  }\n}\n\nexport const increment = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: INCREMENT\n    })\n  }\n}\n\nexport const incrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: INCREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: INCREMENT\n      })\n    }, 3000)\n  }\n}\n\nexport const decrement = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    dispatch({\n      type: DECREMENT\n    })\n  }\n}\n\nexport const decrementAsync = () => {\n  return dispatch => {\n    dispatch({\n      type: DECREMENT_REQUESTED\n    })\n\n    return setTimeout(() => {\n      dispatch({\n        type: DECREMENT\n      })\n    }, 3000)\n  }\n}\n","console.log(\"process.env.NODE_ENV\", process.env.NODE_ENV);\n\nlet BASE_URL;\n\nif(process.env.NODE_ENV == \"production\") {\n    BASE_URL = \"http://cmpt373.csil.sfu.ca:8088/api\"\n} else {\n    BASE_URL = \"http://localhost:5000/api\"\n}\n\nexport default BASE_URL","import axios from 'axios';\n\nimport BASE_URL from '../serverUrl'\n\nexport const UPDATE_POSTS = 'posts/UPDATE_POSTS'\nexport const UPDATE_POSTS_REQUESTED = 'posts/UPDATE_POSTS_REQUESTED'\nexport const UPDATE_POSTS_ERR = 'posts/UPDATE_POSTS_ERR'\nexport const UPDATE_MSG = 'posts/UPDATE_MSG'\n\nexport const getPosts = () => {\n    return dispatch => {\n      dispatch({\n        type: UPDATE_POSTS_REQUESTED\n      })\n\n      \n      return axios.get(BASE_URL + \"/hello-world\").then(res => {\n        // console.log(\"hello world res: \", res);\n        dispatch({\n          type: UPDATE_MSG,\n          payload: res.data\n        })\n      })\n\n      axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((res) => {\n          console.log(\"get posts res: \", res);\n          dispatch({\n              type: UPDATE_POSTS,\n              payload: res.data\n          })\n      }).catch(err => {\n          console.err(err);\n          dispatch({\n              type: UPDATE_POSTS_ERR\n          })\n      })\n    }\n  }","// import all the actions here\n\nimport { \n    UPDATE_POSTS,\n    UPDATE_POSTS_REQUESTED,\n    UPDATE_POSTS_ERR,\n    UPDATE_MSG\n } from '../actions/posts';\n\nconst initialState = {\n    posts: [],\n    isFetchingPosts: false,\n    msg: \"\"\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n        isLoading: false\n      }\n    \n    case UPDATE_POSTS_REQUESTED: \n      return {\n          ...state,\n          isLoading: true\n      }\n\n    case UPDATE_POSTS_ERR:\n      return {\n          ...state,\n          isLoading: false\n      }\n    \n    case UPDATE_MSG:\n      return {\n        ...state,\n        msg: action.payload.msg\n      }\n\n    default:\n      return state\n  }\n}\n","export const INCREMENT_REQUESTED = 'counter/INCREMENT_REQUESTED'\nexport const INCREMENT = 'counter/INCREMENT'\nexport const DECREMENT_REQUESTED = 'counter/DECREMENT_REQUESTED'\nexport const DECREMENT = 'counter/DECREMENT'\n\nconst initialState = {\n  currentUser: {}\n}\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_USER':\n      return {...state, currentUser: action.payload}\n    case 'LOGOUT_USER':\n      return {...state, currentUser: {} }\n    case 'INVALID_USER':\n      return {...state, currentUser: {} }\n    default:\n      return state;\n  }\n}","import axios from 'axios';\n\nimport BASE_URL from '../serverUrl'\n\nexport const GET_PATIENTS = 'posts/GET_PATIENTS'\nexport const GET_PATIENTS_REQUESTED = 'posts/GET_PATIENTS_REQUESTED'\nexport const GET_PATIENTS_ERR = 'posts/GET_POSTS_ERR'\n\nexport const getPatients = () => {\n    return dispatch => {\n      dispatch({\n        type: GET_PATIENTS_REQUESTED\n      })\n\n      axios.get(BASE_URL + \"/patient/allinfo\").then((res) => {\n          console.log(\"get patients res: \", res);\n          dispatch({\n              type: GET_PATIENTS,\n              payload: res.data\n          })\n      }).catch(err => {\n          console.log(err);\n          dispatch({\n              type: GET_PATIENTS_ERR\n          })\n      })\n    }\n  }","// import all the actions here\n\nimport { \n    GET_PATIENTS,\n    GET_PATIENTS_REQUESTED,\n    GET_PATIENTS_ERR\n } from '../actions/patients';\n\nconst initialState = {\n    patientsList: [],\n    isFetchingPatient: false,\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PATIENTS:\n      return {\n        ...state,\n        patientsList: action.payload,\n        isLoading: false\n      }\n    \n    case GET_PATIENTS_REQUESTED: \n      return {\n          ...state,\n          isLoading: true\n      }\n\n    case GET_PATIENTS_ERR:\n      return {\n          ...state,\n          isLoading: false\n      }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport counter from './counter'\nimport posts from './posts'\nimport user from './user'\nimport patients from './patients'\n\nexport default combineReducers({\n  counter,\n  posts,\n  user,\n  patients\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport * as History from 'history'\nimport rootReducer from './reducers'\n\nexport const history = History.createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import React from 'react'\nimport { Redirect } from 'react-router-dom' \nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { Button, Header,  Image, Modal } from 'semantic-ui-react'\n\n\nconst Home = props => {\n  return (\n    props.currentUser ? \n      <Redirect to=\"/patients\" /> : <Redirect to=\"/login\" />\n  )\n}\n\nconst mapStateToProps = ({ user }) => ({\n  currentUser: user.currentUser\n})\n\n\nexport default connect(\n  mapStateToProps\n)(Home)\n\n// const Home = props => (\n//   <div className=\"content-box\">\n//     <h1>Home</h1>\n//     <Modal trigger={<Button>Show Modal</Button>}>\n//     <Modal.Header>Select a Photo</Modal.Header>\n//       <Modal.Content image>\n//         <Image wrapped size='medium' src='/images/avatar/large/rachel.png' />\n//         <Modal.Description>\n//           <Header>Default Profile Image</Header>\n//           <p>\n//             We've found the following gravatar image associated with your e-mail\n//             address.\n//           </p>\n//           <p>Is it okay to use this photo?</p>\n//         </Modal.Description>\n//       </Modal.Content>\n//     </Modal>\n//     <Button content='Primary' primary />\n//     <Button content='Secondary' secondary />\n//     <div className=\"ui divider\"></div>\n//     <Header as='h1'>First Header</Header>\n//     <Header as='h2'>Second Header</Header>\n//     <Header as='h3'>Third Header</Header>\n//     <Header as='h4'>Fourth Header</Header>\n//     <Header as='h5'>Fifth Header</Header>\n//     <Header as='h6'>Sixth Header</Header>\n\n//     <p>Count: {props.count}</p>\n\n//     <p>Message from server: {props.msg}</p>\n\n//     <div>\n//       <Button onClick={props.increment}>Increment</Button>\n//       <Button onClick={props.incrementAsync} disabled={props.isIncrementing}>\n//         Increment Async\n//       </Button>\n//     </div>\n\n//     <div>\n//       <button onClick={props.decrement}>Decrement</button>\n//       <button onClick={props.decrementAsync} disabled={props.isDecrementing}>\n//         Decrement Async\n//       </button>\n//     </div>\n\n//     <div>\n//       <button onClick={() => props.changePage()}>\n//         Go to about page via redux\n//       </button>\n//     </div>\n\n//     <div>\n//       <button onClick={() => props.getPosts()}>\n//         Click me to get posts from server.\n//       </button>\n//     </div>\n\n//     <div>\n//       <ul>\n//         {props.posts.map((post, i) => {\n//           return <li key={i}>{post.title}</li>\n//         })}\n//       </ul>\n//     </div>\n\n//   </div>\n// )\n\n// const mapStateToProps = ({ counter, posts }) => ({\n//   count: counter.count,\n//   isIncrementing: counter.isIncrementing,\n//   isDecrementing: counter.isDecrementing,\n//   posts: posts.posts,\n//   msg: posts.msg\n// })\n\n// const mapDispatchToProps = dispatch =>\n//   bindActionCreators(\n//     {\n//       increment,\n//       incrementAsync,\n//       decrement,\n//       decrementAsync,\n//       changePage: () => push('/about-us'),\n//       getPosts\n//     },\n//     dispatch\n//   )\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(Home)\n","import { push } from 'connected-react-router'\nimport axios from 'axios';\n\nimport BASE_URL from '../serverUrl'\n\nexport const userPostFetch = user => {\n  return dispatch => {\n    return fetch(BASE_URL + \"/user/register\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify(user)\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.message) {\n          // TODO: do something with error message\n          console.log(data)\n        } else {\n          dispatch(userLoginFetch(user)).then(() => { // log the user in\n            dispatch(push('/patients'))\n          }) \n        }\n      })\n  }\n}\n\nexport const userLoginFetch = user => {\n  return dispatch => {\n    return fetch(BASE_URL + \"/user/auth\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify(user)\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.message) {\n          // Invalid post raise an error, i.e. password not filled\n          console.log(data.message)\n        } else {\n          localStorage.setItem(\"token\", data.token);\n          dispatch(getCurrentUser()).then(() => {\n            dispatch(push('/patients'))\n          })\n        }\n      })\n  }\n}\n\nexport const getCurrentUser = () => {\n  return dispatch => {\n    const token = localStorage.token;\n      return axios.get(BASE_URL + \"/user/current\", {\n        'headers': {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      })\n        .then(res => {\n          if (res.msg) {\n            console.log(res)\n            // invalid token, remove current token\n            localStorage.removeItem(\"token\")\n            dispatch(push('/login'))\n          } else {\n            console.log(res)\n            dispatch(loginUser(res.data))\n          }\n        }).catch((err) => { \n          dispatch(push('/login'))\n          return {'message' : 'Not authorized'}\n        } )\n    }\n}\n\nexport const logoutUser = () => {\n  return dispatch => {\n    localStorage.removeItem(\"token\")\n    dispatch(logoutUserAction())\n    dispatch(push('/login'))\n  }\n}\n\nconst logoutUserAction = () => ({\n  type: 'LOGOUT_USER'\n})\n\nconst loginUser = userObj => ({\n  type: 'LOGIN_USER',\n  payload: userObj\n})\n\nconst invalidUser = () => ({\n  type: 'INVALID_USER'\n})","import React, {Component} from 'react';\nimport MaterialTable from 'material-table';\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getPatients } from '../../actions/patients';\nimport { getCurrentUser } from '../../actions/users';\nimport { getPosts } from '../../actions/posts';\n\nimport { Button,\n  Header, Image, Modal,\n  Divider, Form, Select,\n  Input, TextArea\n} from 'semantic-ui-react'\n\nconst sexOptions = [\n  { key: 'm', text: 'Male', value: 'M' },\n  { key: 'f', text: 'Female', value: 'F' },\n  { key: 'o', text: 'Other', value: 'I' },\n]\n\nconst pregOptions = [\n  { key: 'y', text: 'Yes', value: true },\n  { key: 'n', text: 'No', value: false },\n]\n\nclass PatientPage extends Component {\n  state = {\n    columns: [\n      { title: 'Patient ID', field: 'patientId', defaultSort: 'asc' },\n      { title: 'Patient Name', field: 'patientName',\n        render: rowData => \n          <div>\n            <p>{rowData.patientName}</p>\n            <a onClick={() => this.openPatientModal({rowData})}>View Info</a>\n          </div>  \n      },\n      { title: 'Readings', render: rowData => <a onClick={() => this.openReadingModal({rowData})}>View Reading</a> },\n      { title: 'Follow Up Status', field: 'followUp',\n        render: rowData => rowData.isPregnant ? (<button>Follow Up</button>) : (<p>Not needed</p>) },\n    ],\n    data: [],\n    selectedPatient: { patientId: '', patientName: 'Test', \n                       patientSex: 'F', medicalHistory: '',\n                       drugHistory: '', villageNumber:'', readings: []\n                      },\n    displayPatientModal: false,\n    displayReadingModal: false\n  }\n\n  componentDidMount = () => {\n    console.log('componentDidMount')\n    this.props.getCurrentUser().then((err) => {\n      if (err !== undefined) {\n        // error from getCurrentUser(), don't get patients\n        return\n      }\n      this.props.getPatients()\n    })\n  }\n\n  handleSelectChange = (e, value) => {\n    console.log(value)\n    this.setState({'selectedPatient': { ...this.state.selectedPatient, [value.name] : value.value } })\n  }\n\n  openPatientModal = (patientData) => {\n    console.log(patientData)\n    console.log('open patient modal')\n    this.setState({ displayPatientModal: true, selectedPatient: patientData['rowData'] })\n  }\n\n  closePatientModal = () => {\n    console.log('close patient modal')\n    this.setState({ displayPatientModal: false })\n  }\n\n  openReadingModal = (patientData) => {\n    console.log(patientData)\n    console.log('open reading modal')\n    this.setState({ displayReadingModal: true, selectedPatient: patientData['rowData'] })\n  }\n\n  closeReadingModal = () => {\n    console.log('close reading modal')\n    this.setState({ displayReadingModal: false })\n  }\n  \n  handleSubmit = (event) => {\n    event.preventDefault();\n    let patientData = this.state.selectedPatient\n\n    // delete any unnecessary fields\n    delete patientData.readings\n    delete patientData.tableData\n    delete patientData.patientId\n\n    let patientJSON = JSON.stringify({ 'patient' : patientData });\n    console.log(patientJSON)\n\n    // TODO: make request to update patient record\n  }\n\n  render() {\n    // don't render page if user is not logged in\n    if (!this.props.user.isLoggedIn) {\n      return <div />\n    }\n\n    let readings = [];\n    if (this.state.selectedPatient.readings.length > 0) {\n      for (var i = 0; i < this.state.selectedPatient.readings.length; i++) {\n        readings.push(<p>Reading {i+1}</p>)\n        readings.push(<p>Date Referred: {this.state.selectedPatient.readings[i]['dateReferred']}</p>)\n        readings.push(<p>BP Diastolic: {this.state.selectedPatient.readings[i]['bpDiastolic']}</p>)\n        readings.push(<p>BP Systolic: {this.state.selectedPatient.readings[i]['bpSystolic']}</p>)\n\n        if (this.state.selectedPatient.readings[i]['comment']) { // has a referral attached!\n          readings.push(<p>Referral Status: Referred! : {this.state.selectedPatient.readings[i]['comment']}</p>)\n          readings.push(<Button>Follow Up</Button>)\n        }else {\n          readings.push(<p>Referral Status: Not Referred!</p>)\n        }\n        readings.push(<Divider />)\n      }\n    }\n\n\n    return (\n        <div >\n          <h1>Patients List</h1>\n          <p> only logged in users are allowed to see this </p>\n          <MaterialTable\n            title=\"Patients Table\"\n            columns={this.state.columns}\n            data={this.props.data}\n            editable={{\n              onRowAdd: newData =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    const data = [...this.state.data];\n                    data.push(newData);\n                    this.setState({ ...this.state, data });\n                  }, 600);\n                }),\n              onRowUpdate: (newData, oldData) =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    const data = [...this.state.data];\n                    data[data.indexOf(oldData)] = newData;\n                    this.setState({ ...this.state, data });\n                  }, 600);\n                }),\n              onRowDelete: oldData =>\n                new Promise(resolve => {\n                  setTimeout(() => {\n                    resolve();\n                    const data = [...this.state.data];\n                    data.splice(data.indexOf(oldData), 1);\n                    this.setState({ ...this.state, data });\n                  }, 600);\n                }),\n            }}\n          />\n\n          <Modal closeIcon onClose={this.closePatientModal} open={this.state.displayPatientModal}>\n            <Modal.Header>Patient Readings</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <Header>Patient Readings for ID #{this.state.selectedPatient.patientId}</Header>\n                <Divider />\n                <Form onSubmit={this.handleSubmit}>\n                  <Form.Group widths='equal'>\n                    <Form.Field\n                      name=\"patientName\"\n                      value={this.state.selectedPatient.patientName}\n                      control={Input}\n                      label='Name'\n                      placeholder='Patient Name'\n                      onChange={this.handleSelectChange}\n                    />\n                    <Form.Field\n                      name=\"patientAge\"\n                      value={this.state.selectedPatient.patientAge}\n                      control={Input}\n                      label='Age'\n                      placeholder='Patient age'\n                      onChange={this.handleSelectChange}\n                    />\n                    <Form.Field\n                      name=\"patientSex\"\n                      control={Select}\n                      value={this.state.selectedPatient.patientSex}\n                      label='Gender'\n                      options={sexOptions}\n                      placeholder='Gender'\n                      onChange={this.handleSelectChange}\n                    />\n                  </Form.Group>\n                  <Form.Group widths='equal'>\n                    <Form.Field\n                      name='villageNumber'\n                      value={this.state.selectedPatient.villageNumber}\n                      control={Input}\n                      label='Village Number'\n                      placeholder='Village Number'\n                      onChange={this.handleSelectChange}\n                    />\n                    <Form.Field\n                      name='isPregnant'\n                      value={this.state.selectedPatient.isPregnant}\n                      control={Select}\n                      label='Pregant'\n                      options={pregOptions}\n                      onChange={this.handleSelectChange}\n                    />\n                  </Form.Group>\n                  <Form.Field\n                    name=\"drugHistory\"\n                    value={this.state.selectedPatient.drugHistory || ''}\n                    control={TextArea}\n                    label='Drug History'\n                    placeholder=\"Patient's drug history...\"\n                    onChange={this.handleSelectChange}\n                  />\n                  <Form.Field\n                    name=\"medicalHistory\"\n                    value={this.state.selectedPatient.medicalHistory || ''}\n                    control={TextArea}\n                    label='Medical History'\n                    placeholder=\"Patient's medical history...\"\n                    onChange={this.handleSelectChange}\n                  />\n                  <Form.Field control={Button}>Submit</Form.Field>\n                </Form>\n\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n\n          <Modal closeIcon onClose={this.closeReadingModal} open={this.state.displayReadingModal}>\n            <Modal.Header>Patient Information</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <Header>Patient ID #{this.state.selectedPatient.patientId}</Header>\n                <Divider />\n                <p>{readings}</p>\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n\n        </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = ({ patients, user }) => ({\n  patients : patients,\n  data : patients.patientsList,\n  user : user.currentUser\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      getPatients,\n      getCurrentUser,\n      getPosts\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PatientPage)\n","import React, {Component} from 'react';\nimport { push } from 'connected-react-router'\nimport { Route, Link } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { userPostFetch } from '../../actions/users'\n\nclass Signup extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    console.log('submitted!')\n    this.props.userPostFetch(this.state)\n  }\n\n  render() {\n    return (\n      <div className=\"loginWrapper\">\n        <form onSubmit={this.handleSubmit} className=\"content-box\">\n          <h1>Sign Up</h1>\n\n          <label>Email</label>\n          <input\n            name='email'\n            type='email'\n            value={this.state.email}\n            onChange={this.handleChange}\n            />\n          <br/>\n          <label>Password</label>\n          <input\n            type='password'\n            name='password'\n            value={this.state.password}\n            onChange={this.handleChange}\n            />\n          <br/>\n          <div className=\"flexbox\">\n            <input className=\"contant-submit white\" type='submit'/>\n            <Link className=\"link\" style={{ textDecoration: 'none' }} to=\"/login\"> Login </Link>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      userPostFetch\n    },\n    dispatch\n  )\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Signup)\n","import React, {Component} from 'react';\nimport { Route, Link } from 'react-router-dom'\nimport { push } from 'connected-react-router'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { userLoginFetch } from '../../actions/users';\n\nimport './login.css'\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.userLoginFetch(this.state)\n  }\n\n  render() {\n    return (\n      <div className=\"loginWrapper\">\n        <form onSubmit={this.handleSubmit} className=\"content-box\">\n          <h1>Login</h1>\n\n          <label>Email</label>\n          <input\n            name='email'\n            type='email'\n            value={this.state.email}\n            onChange={this.handleChange}\n            />\n          <br/>\n          <label>Password</label>\n          <input\n            type='password'\n            name='password'\n            value={this.state.password}\n            onChange={this.handleChange}\n            />\n          <br/>\n          <div className=\"flexbox\">\n            <input className=\"contant-submit white\" type='submit'/>\n            <Link className=\"link\" style={{ textDecoration: 'none' }} to=\"/signup\"> Sign up </Link>\n          </div>\n          \n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  email : user.currentUser.email,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      userLoginFetch,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login)\n","import React, {Component} from 'react';\nimport { Route, Link } from 'react-router-dom'\nimport { Menu, Button } from 'semantic-ui-react'\nimport Home from '../home'\nimport PatientPage from '../patientPage'\nimport Signup from '../signup'\nimport Login from '../login'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { logoutUser } from '../../actions/users';\nimport PropTypes from 'prop-types'\n\nclass App extends Component {\n\n  static propTypes = {\n    color: PropTypes.string,\n  }\n\n  state = { activeItem: 'Home' }\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n      const { color } = this.props\n      const { activeItem } = this.state\n\n    return (\n      \n      <div >\n        <Menu color={'blue'} key={'blue'} inverted>\n          <Menu.Item name='Home' active={activeItem === 'Home'} onClick={this.handleItemClick}>\n              <Link className=\"link\" style={{ textDecoration: 'none' }} to=\"/\"> Home </Link>\n          </Menu.Item>\n          \n          <Menu.Item name='Patient' active={activeItem === 'Patient'} onClick={this.handleItemClick}>\n            <Link className=\"link\" style={{ textDecoration: 'none' }} to=\"/patients\"> Patients </Link>\n          </Menu.Item>\n            \n          <Menu.Item name='Login' active={activeItem === 'Login'} onClick={this.handleItemClick}>\n          {this.props.user.isLoggedIn ? (\n            <Link className=\"link\" style={{ textDecoration: 'none' }} to=\"/\" onClick={ () => this.props.logoutUser() }>Logout</Link>\n          ) : (\n            <Link className=\"link\" style={{ textDecoration: 'none' }} to=\"/login\"> Login </Link>\n          )}\n          </Menu.Item> \n          \n          {this.props.user.isLoggedIn ? (\n            <div></div>\n          ) : (\n            <Menu.Item name='Signup' active={activeItem === 'Signup'} onClick={this.handleItemClick}>\n              <Link className=\"link\" style={{ textDecoration: 'none' }} to=\"/signup\"> Signup </Link>\n            </Menu.Item>\n          )}\n        </Menu>\n          \n        \n        <main>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/patients\" component={PatientPage} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/login\" component={Login} />\n        </main>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  user : user.currentUser,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      logoutUser\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\n\nimport BASE_URL from './serverUrl'\n\nconsole.log(\"API BASE_URL: \" + BASE_URL);\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}